local material = require('material')
local g = vim.g

g.material_style = 'deep ocean'
local colors = require('material/colors')

-- Custom colors.
colors.main.pink = '#ff9cac'

material.setup({
  contrast = {
    sidebars = true,
    floating_windows = false,
    line_numbers = false,
    sign_column = false,
    cursor_line = false,
    popup_menu = true,
  },
  styles = {
    comments = { italic = true },
  },
  plugins = {
    'gitsigns',
    'nvim-cmp',
    'nvim-tree',
    'indent-blankline',
  },
  disable = {
    colored_cursor = true,
    term_colors = true,
  },
  custom_highlights = {
    -- Common
    Identifier = { fg = colors.main.cyan },
    Todo = { fg = colors.main.yellow, bold = true },
    DiffAdd = { bg = '#45493e' },
    DiffChange = { bg = '#384851' },
    DiffDelete = { fg = colors.editor.selection },
    DiffText = { bg = '#5b7881' },
    MatchParen = { fg = colors.syntax.comments, bg = colors.main.cyan },
    Search = { fg = colors.main.white, bg = colors.syntax.comments },
    IncSearch = { fg = colors.main.white, bg = colors.syntax.comments },
    StatusLine = { fg = colors.syntax.comments, bg = colors.editor.bg },
    StatusLineNC = { fg = colors.editor.selection, bg = colors.editor.bg },
    LspReferenceText = { bg = '#1F2233' },
    LspReferenceRead = { bg = '#1F2233' },
    LspReferenceWrite = { bg = '#1F2233' },
    Pmenu = { fg = colors.editor.fg, bg = colors.editor.border },
    PmenuSel = { bg = colors.syntax.comments },
    PmenuSbar = { bg = colors.editor.active },
    PmenuThumb = { bg = colors.editor.fg },
    NormalFloat = { bg = colors.editor.border },
    PreProc = { fg = colors.main.purple },

    -- Git Commit Messages
    gitcommitHeader = { fg = colors.main.purple },
    gitcommitUnmerged = { fg = colors.main.green },
    gitcommitSelectedFile = { fg = colors.main.green },
    gitcommitDiscardedFile = { fg = colors.main.red },
    gitcommitUnmergedFile = { fg = colors.main.yellow },
    gitcommitSelectedType = { fg = colors.main.green },
    gitcommitSummary = { fg = colors.main.blue },
    gitcommitDiscardedType = { fg = colors.main.red },

    -- NvimTree
    NvimTreeIndentMarker = { fg = colors.editor.selection },
    NvimTreeFolderIcon = { fg = colors.editor.fg },
    NvimTreeFolderName = { fg = colors.main.blue },
    NvimTreeOpenedFolderName = { fg = colors.main.blue, italic = true },
    NvimTreeGitDirty = { fg = colors.main.yellow },
    NvimTreeGitStaged = { fg = colors.main.green },
    NvimTreeGitMerge = { fg = colors.main.red },
    NvimTreeGitRenamed = { fg = colors.main.orange },
    NvimTreeGitNew = { fg = colors.main.pink },
    NvimTreeGitDeleted = { fg = colors.main.red },
    NvimTreeGitIgnored = { fg = colors.syntax.comments },

    -- Cmp
    CmpItemMenu = { fg = colors.main.gray },
    CmpItemAbbrMatch = { fg = colors.main.blue, bold = true },
    CmpItemAbbrDeprecated = { fg = colors.syntax.comments, bold = true },
    CmpItemAbbrMatchFuzzy = { fg = colors.main.blue, bold = true },
    CmpItemKindText = { fg = colors.editor.fg },
    CmpItemKindMethod = { fg = colors.main.paleblue },
    CmpItemKindFunction = { fg = colors.main.purple },
    CmpItemKindConstructor = { fg = colors.main.cyan },
    CmpItemKindField = { fg = colors.main.yellow },
    CmpItemKindVariable = { fg = colors.main.purple },
    CmpItemKindClass = { fg = colors.editor.darkpurple },
    CmpItemKindInterface = { fg = colors.editor.darkorange },
    CmpItemKindModule = { fg = colors.editor.darkblue },
    CmpItemKindProperty = { fg = colors.editor.darkyellow },
    CmpItemKindUnit = { fg = colors.main.green },
    CmpItemKindValue = { fg = colors.main.pink },
    CmpItemKindEnum = { fg = colors.editor.darkgreen },
    CmpItemKindKeyword = { fg = colors.main.purple },
    CmpItemKindSnippet = { fg = colors.editor.darkcyan },
    CmpItemKindColor = { fg = colors.editor.darkred },
    CmpItemKindFile = { fg = colors.main.white },
    CmpItemKindReference = { fg = colors.main.orange },
    CmpItemKindFolder = { fg = colors.main.blue },
    CmpItemKindEnumMember = { fg = colors.main.green },
    CmpItemKindConstant = { fg = colors.editor.darkorange },
    CmpItemKindStruct = { fg = colors.main.purple },
    CmpItemKindEvent = { fg = colors.main.yellow },
    CmpItemKindOperator = { fg = colors.main.blue },

    -- GitSigns
    GitSignsAdd = { fg = colors.main.green },
    GitSignsAddNr = { fg = colors.main.green },
    GitSignsAddLn = { fg = colors.main.green },
    GitSignsChange = { fg = colors.main.yellow },
    GitSignsChangeNr = { fg = colors.main.yellow },
    GitSignsChangeLn = { fg = colors.main.yellow },
    GitSignsDelete = { fg = colors.main.red },
    GitSignsDeleteNr = { fg = colors.main.red },
    GitSignsDeleteLn = { fg = colors.main.red },

    -- DiffView
    gitcommitNoBranch = { link = 'gitcommitBranch' },
    gitcommitUntracked = { link = 'gitcommitComment' },
    gitcommitDiscarded = { link = 'gitcommitComment' },
    gitcommitSelected = { link = 'gitcommitComment' },
    gitcommitDiscardedArrow = { link = 'gitcommitDiscardedFile' },
    gitcommitSelectedArrow = { link = 'gitcommitSelectedFile' },
    gitcommitUnmergedArrow = { link = 'gitcommitUnmergedFile' },

    -- CSS
    cssAttrComma = { fg = colors.editor.fg },
    cssPseudoClassId = { fg = colors.main.yellow },
    cssBraces = { fg = colors.editor.fg },
    cssClassName = { fg = colors.main.yellow },
    cssClassNameDot = { fg = colors.main.yellow },
    cssFunctionName = { fg = colors.main.blue },
    cssImportant = { fg = colors.main.cyan },
    cssIncludeKeyword = { fg = colors.main.purple },
    cssTagName = { fg = colors.main.red },
    cssMediaType = { fg = colors.main.orange },
    cssProp = { fg = colors.editor.fg },
    cssSelectorOp = { fg = colors.main.cyan },
    cssSelectorOp2 = { fg = colors.main.cyan },
    cssAttr = { fg = colors.main.orange },

    -- JavaScript
    javaScriptBraces = { fg = colors.editor.fg },
    javaScriptNull = { fg = colors.main.orange },
    javaScriptIdentifier = { fg = colors.main.purple },
    javaScriptNumber = { fg = colors.main.orange },
    javaScriptRequire = { fg = colors.main.cyan },
    javaScriptReserved = { fg = colors.main.purple },
    jsArrowFunction = { fg = colors.main.purple },
    jsAsyncKeyword = { fg = colors.main.purple },
    jsBooleanTrue = { fg = colors.main.orange },
    jsBooleanFalse = { fg = colors.main.orange },
    jsBrackets = { fg = colors.main.pink },
    jsCatch = { fg = colors.main.cyan, italic = true },
    jsClassBraces = { fg = colors.main.cyan },
    jsClassDefinition = { fg = colors.main.yellow },
    jsClassFuncName = { fg = colors.main.pink },
    jsClassProperty = { fg = colors.main.pink },
    jsClassKeyword = { fg = colors.main.purple },
    jsConditional = { fg = colors.main.cyan, italic = true },
    jsDocParam = { fg = colors.main.green },
    jsDocTags = { fg = colors.main.cyan },
    jsDot = { fg = colors.main.cyan },
    jsException = { fg = colors.main.cyan, italic = true },
    jsExceptions = { fg = colors.main.yellow },
    jsExport = { fg = colors.main.cyan, italic = true },
    jsExportDefault = { fg = colors.main.cyan, italic = true },
    jsExtendsKeyword = { fg = colors.main.purple },
    jsFinally = { fg = colors.main.cyan, italic = true },
    jsFinallyBraces = { fg = colors.main.cyan },
    jsFlowArgumentDef = { fg = colors.main.yellow },
    jsForAwait = { fg = colors.main.cyan, italic = true },
    jsFrom = { fg = colors.main.cyan, italic = true },
    jsFuncBraces = { fg = colors.main.cyan },
    jsFuncCall = { fg = colors.main.blue },
    jsFuncParens = { fg = colors.main.cyan },
    jsFunction = { fg = colors.main.purple },
    jsFunctionKey = { fg = colors.main.pink },
    jsGlobalObjects = { fg = colors.main.yellow },
    jsGlobalNodeObjects = { fg = colors.main.yellow },
    jsIfElseBraces = { fg = colors.main.cyan },
    jsImport = { fg = colors.main.cyan, italic = true },
    jsModuleAs = { fg = colors.main.cyan, italic = true },
    jsModuleBraces = { fg = colors.main.cyan },
    jsNull = { fg = colors.main.cyan },
    jsNoise = { fg = colors.main.cyan },
    jsObjectBraces = { fg = colors.main.cyan },
    jsObjectColon = { fg = colors.main.cyan },
    jsObjectKey = { fg = '#8f93a2' },
    jsObjectSeparator = { fg = colors.main.cyan },
    jsParens = { fg = colors.main.pink },
    jsRepeat = { fg = colors.main.cyan, italic = true },
    jsReturn = { fg = colors.main.cyan, italic = true },
    jsStorageClass = { fg = colors.main.purple },
    jsTemplateBraces = { fg = colors.main.cyan },
    jsTemplateExpression = { fg = colors.editor.fg },
    jsTemplateString = { fg = colors.main.green },
    jsThis = { fg = colors.main.cyan, italic = true },
    jsTry = { fg = colors.main.cyan, italic = true },
    jsTryCatchBraces = { fg = colors.main.cyan },
    jsUndefined = { fg = colors.main.cyan },
    jsVariableDef = { fg = colors.main.red },

    -- TypeScript
    typescriptVariable = { fg = colors.main.purple },
    typescriptImport = { fg = colors.main.cyan },
    typescriptExport = { fg = colors.main.cyan },
    typescriptMember = { fg = '#8f93a2' },
    typescriptPredefinedType = { fg = '#b2ccd6' },
    typescriptAliasDeclaration = { fg = colors.main.yellow },
    typescriptTypeReference = { fg = colors.main.yellow },
    typescriptObjectLiteral = { fg = colors.main.blue },
    typescriptObjectLabel = { fg = '#9ea1ae' },
    typescriptDestructureVariable = { fg = colors.main.red },
    typescriptDestructureLabel = { fg = '#8f93a2' },
    typescriptBraces = { fg = colors.main.cyan },
    typescriptCastKeyword = { fg = colors.main.cyan },
    typescriptParens = { fg = colors.main.pink },
    typescriptVariableDeclaration = { fg = colors.main.red },
    typescriptInterfaceName = { fg = colors.main.yellow },

    -- JSX
    jsxTag = { fg = colors.main.cyan },
    jsxTagName = { fg = colors.main.pink },
    jsxComponentName = { fg = colors.main.yellow },
    jsxCloseTag = { fg = colors.main.cyan },
    jsxEscapeJs = { fg = colors.editor.fg },
    jsxCloseString = { fg = colors.main.cyan },
    jsxAttrib = { fg = colors.main.purple, italic = true },
    jsxString = { fg = colors.main.green },
    jsxEqual = { fg = colors.main.purple },
    jsxDot = { fg = colors.main.cyan },
    jsxSpreadOperator = { fg = colors.main.purple },
    jsxBraces = { fg = colors.main.cyan },
    jsxNamespace = { fg = colors.main.cyan },

    -- JSON
    jsonBraces = { fg = colors.editor.fg },
    jsonQuote = { fg = colors.editor.fg },

    -- HTML
    htmlTagName = { fg = colors.main.pink },
    htmlEndTag = { fg = colors.main.cyan },
    htmlTag = { fg = colors.main.cyan },
    htmlSpecialTagName = { fg = colors.main.yellow },
    htmlArg = { fg = colors.main.purple, italic = true },
    htmlTitle = { fg = colors.editor.fg },
    htmlLink = { fg = colors.editor.fg },
    htmlBold = { fg = colors.main.pink, bold = true },
    htmlH1 = { fg = colors.main.yellow },
    htmlH2 = { fg = colors.main.yellow },
    htmlH3 = { fg = colors.main.yellow },
    htmlH4 = { fg = colors.main.yellow },
    htmlH5 = { fg = colors.main.yellow },
    htmlH6 = { fg = colors.main.yellow },
    htmlItalic = { fg = colors.main.pink, italic = true },

    -- XML
    xmlAttrib = { fg = colors.main.purple, italic = true },
    xmlEndTag = { fg = colors.main.cyan },
    xmlTag = { fg = colors.main.cyan },
    xmlTagName = { fg = colors.main.pink },

    -- Markdown
    markdownBold = { fg = colors.main.pink, bold = true },
    markdownBoldDelimiter = { fg = colors.main.cyan },
    markdownCode = { fg = colors.main.paleblue },
    markdownCodeDelimiter = { fg = colors.main.green },
    markdownHeadingDelimiter = { fg = colors.main.cyan },
    markdownH1 = { fg = colors.main.yellow },
    markdownH2 = { fg = colors.main.yellow },
    markdownH3 = { fg = colors.main.yellow },
    markdownH4 = { fg = colors.main.yellow },
    markdownH5 = { fg = colors.main.yellow },
    markdownH6 = { fg = colors.main.yellow },
    markdownItalic = { fg = colors.main.pink, italic = true },
    markdownItalicDelimiter = { fg = colors.main.cyan },
    markdownLinkDelimiter = { fg = colors.main.cyan },
    markdownLinkText = { fg = colors.main.green },
    markdownLinkTextDelimiter = { fg = colors.main.cyan },
    markdownListMarker = { fg = colors.main.cyan },
    markdownUrl = { fg = colors.main.pink, underline = true },
    markdownUrlTitleDelimiter = { fg = colors.main.green },
    mkdBold = { fg = colors.main.cyan },
    mkdCodeStart = { fg = colors.main.green },
    mkdCodeDelimiter = { fg = colors.main.cyan },
    mkdDelimiter = { fg = colors.main.cyan },
    mkdHeading = { fg = colors.main.cyan },
    mkdItalic = { fg = colors.main.cyan },
    mkdLink = { fg = colors.main.green },
    mkdListItem = { fg = colors.main.cyan },
    mkdURL = { fg = colors.main.pink, underline = true },
  },
})
